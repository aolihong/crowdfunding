<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- 这个是Mybatis逆向工程自动生成的sql映射文件，涵盖了所有的与数据库表相关的DML,DQL语句 。 是很全面的sql语句标签 -->

<mapper namespace="com.aolhon.crowd.mapper.AdminMapper">
	<resultMap id="BaseResultMap" type="com.aolhon.crowd.entity.Admin">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="login_acct" property="loginAcct" jdbcType="VARCHAR" />
		<result column="user_pswd" property="userPswd" jdbcType="VARCHAR" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="CHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, login_acct, user_pswd, user_name, email, create_time
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.aolhon.crowd.entity.AdminExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from t_admin
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_admin
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		t_admin
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.aolhon.crowd.entity.AdminExample">
		delete from t_admin
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>

	<!-- inner_admin_role表的操作 -->
	<delete id="deleteOLdRelationship">
		delete from inner_admin_role where admin_id=#{adminId}
	</delete>

	<insert id="insertNewRelationship">
		insert into inner_admin_role(admin_id,role_id) values
		<foreach collection="roleIdList" item="roleId" separator=",">
			(#{adminId},#{roleId})
		</foreach>
	</insert>
	
	<insert id="insert" parameterType="com.aolhon.crowd.entity.Admin">
		insert into t_admin (id,
		login_acct, user_pswd,
		user_name, email, create_time
		)
		values
		(#{id,jdbcType=INTEGER}, #{loginAcct,jdbcType=VARCHAR},
		#{userPswd,jdbcType=VARCHAR},
		#{userName,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR}, #{createTime,jdbcType=CHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.aolhon.crowd.entity.Admin">
		insert into t_admin
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="loginAcct != null">
				login_acct,
			</if>
			<if test="userPswd != null">
				user_pswd,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="loginAcct != null">
				#{loginAcct,jdbcType=VARCHAR},
			</if>
			<if test="userPswd != null">
				#{userPswd,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=CHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.aolhon.crowd.entity.AdminExample"
		resultType="java.lang.Integer">
		select count(*) from t_admin
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>

	<!-- 后期添加的sql语句 *********************************** -->
	<select id="selectAdminListByKeyword" resultMap="BaseResultMap">
		select
		<!-- 这个标签把预先设置的查询列表字段给包含进来，省得再来写一遍查询列表 -->
		<include refid="Base_Column_List"></include>
		from t_admin
		<!-- CONCAT()是sql的连接函数：连接参数列表中的所有字符串 -->
		<!-- "%" 是模糊查询的关键字。表示任意数量个字符 -->
		<!-- "_" 是模糊查询的关键字。只表示一个字符 -->
		where login_acct like CONCAT("%", #{keyword}, "%")
		or
		user_name like CONCAT("%", #{keyword}, "%")
		or
		email like CONCAT("%", #{keyword}, "%")
	</select>


	<update id="updateByExampleSelective" parameterType="map">
		update t_admin
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.loginAcct != null">
				login_acct = #{record.loginAcct,jdbcType=VARCHAR},
			</if>
			<if test="record.userPswd != null">
				user_pswd = #{record.userPswd,jdbcType=VARCHAR},
			</if>
			<if test="record.userName != null">
				user_name = #{record.userName,jdbcType=VARCHAR},
			</if>
			<if test="record.email != null">
				email = #{record.email,jdbcType=VARCHAR},
			</if>
			<if test="record.createTime != null">
				create_time = #{record.createTime,jdbcType=CHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update t_admin
		set id = #{record.id,jdbcType=INTEGER},
		login_acct =
		#{record.loginAcct,jdbcType=VARCHAR},
		user_pswd =
		#{record.userPswd,jdbcType=VARCHAR},
		user_name =
		#{record.userName,jdbcType=VARCHAR},
		email =
		#{record.email,jdbcType=VARCHAR},
		create_time =
		#{record.createTime,jdbcType=CHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.aolhon.crowd.entity.Admin">
		update t_admin
		<set>
			<if test="loginAcct != null">
				login_acct = #{loginAcct,jdbcType=VARCHAR},
			</if>
			<if test="userPswd != null">
				user_pswd = #{userPswd,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=CHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.aolhon.crowd.entity.Admin">
		update t_admin
		set
		login_acct = #{loginAcct,jdbcType=VARCHAR},
		user_pswd =
		#{userPswd,jdbcType=VARCHAR},
		user_name = #{userName,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		create_time =
		#{createTime,jdbcType=CHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>